# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: npm install
    
    - run: npm install
      working-directory: ./backend

    - run: npm install
      working-directory: ./orbital/frontend

    - name: Start backend and frontend
      run: |
        npm run start:frontend & echo "backend_pid=$!" >> $GITHUB_ENV
        npm run start:backend & echo "frontend_pid=$!" >> $GITHUB_ENV

    - name: Wait for servers to start
      run: sleep 10s

    - name: Running Cypress E2E Tests
      run: npm run frontend:test

    - name: Stop servers
      run: |
        if [ -n "$backend_pid" ]; then
          kill $backend_pid || true
        fi
        if [ -n "$frontend_pid" ]; then
          kill $frontend_pid || true
        fi

    - name: Check g++ version
      run: g++ --version
      
    - run: npm run build --if-present
      working-directory: ./backend

    
      
    - name: Compile C++ Program
      run: g++ main.cpp -o main
      working-directory: ./backend/Dijkstra

    - env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        PORT: 4000  # Example, use directly if it's a static value 
      run: npm test
      working-directory: ./backend
